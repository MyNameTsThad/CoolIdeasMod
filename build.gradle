buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7.+'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = '2.0.0'
group = 'com.thaddev.coolideas' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'coolideas'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19'
    mappings channel: 'parchment', version: '1.18.2-2022.08.07-1.19'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.enabledGameTestNamespaces', archivesBaseName
            arg '-mixin.config=mixins.coolideas.json'
            
            mods {
                coolideas {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.enabledGameTestNamespaces', archivesBaseName

            mods {
                coolideas {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.enabledGameTestNamespaces', archivesBaseName

            mods {
                coolideas {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', archivesBaseName, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                coolideas {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19-41.1.0'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "coolideas",
                "Specification-Vendor"    : "thaddev",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "thaddev",
                "TweakClass"              : "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder"              : 0,
                "MixinConfigs"            : "coolideas.mixin.json",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    rename 'mixin.refmap.json', 'coolideas.mixin-refmap.json'
}

jar.finalizedBy('reobfJar')

mixin {
    // MixinGradle Settings
    add sourceSets.main, 'coolideas.mixin-refmap.json'
    config 'mixins.coolideas.json'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
